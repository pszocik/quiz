{"version":3,"sources":["components/Header/Header.js","components/GameButton/GameButton.js","components/Question/Question.js","utils/utils.js","components/Game/Game.js","components/Modal/Modal.js","App.js","index.js"],"names":["Header","GameButton","onClick","children","className","Question","question","setQuestion","setLoadQuestion","points","setPoints","setShowModal","all_answers","map","answer","ev","target","style","backgroundColor","validateAnswer","uuid","htmlDecode","input","DOMParser","parseFromString","documentElement","textContent","Game","useState","loadQuestion","currentQuestion","setCurrentQuestion","useEffect","questionData","fetch","then","response","json","results","appendUUIDToAnswers","shuffleAnswers","cleanAnswers","joinAnswers","modifyQuestionData","answers","sort","a","b","Math","random","el","uuidv4","Object","keys","length","Modal","bodyText","buttonText","App","document","title","showModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a36a7408.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <header>\n      <h1>Quiz app</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import \"./GameButton.css\";\n\nconst GameButton = ({ onClick, children }) => {\n  return (\n    <button className=\"game-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default GameButton;\n","import GameButton from \"../GameButton/GameButton.js\";\nimport \"./Question.css\";\n\nconst Question = ({\n  question,\n  setQuestion,\n  setLoadQuestion,\n  points,\n  setPoints,\n  setShowModal,\n}) => {\n  const validateAnswer = (ev, answer) => {\n    if (answer === question[\"correct_answer\"]) {\n      ev.target.style.backgroundColor = \"green\";\n      setPoints(points + 1);\n      setLoadQuestion(true);\n    } else {\n      setShowModal(true);\n      setPoints(0);\n      setQuestion({});\n    }\n  };\n\n  return (\n    <div className=\"question\">\n      <p>{question.question}</p>\n      {question.all_answers.map((answer) => {\n        return (\n          <GameButton\n            onClick={(ev) => validateAnswer(ev, answer.answer)}\n            key={answer.uuid}\n          >\n            {answer.answer}\n          </GameButton>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Question;\n","function htmlDecode(input) {\n  const doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n}\n\nexport { htmlDecode };\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Question from \"../Question/Question.js\";\nimport GameButton from \"../GameButton/GameButton.js\";\nimport { htmlDecode } from \"../../utils/utils.js\";\n\nconst Game = ({ setShowModal }) => {\n  const [loadQuestion, setLoadQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [points, setPoints] = useState(0);\n\n  useEffect(() => {\n    const modifyQuestionData = (questionData) => {\n      return appendUUIDToAnswers(\n        shuffleAnswers(cleanAnswers(joinAnswers(questionData)))\n      );\n    };\n\n    if (loadQuestion === true) {\n      const url = \"https://opentdb.com/api.php?amount=1\";\n      let questionData = {};\n      fetch(url)\n        .then((response) => response.json())\n        .then((json) => {\n          questionData = json.results[0];\n          questionData.question = htmlDecode(questionData.question);\n          questionData.all_answers = modifyQuestionData(questionData);\n          setCurrentQuestion(questionData);\n        });\n      setLoadQuestion(false);\n    }\n  }, [loadQuestion]);\n\n  const joinAnswers = (questionData) => [\n    ...questionData[\"incorrect_answers\"],\n    questionData[\"correct_answer\"],\n  ];\n\n  const cleanAnswers = (answers) => {\n    return answers.map((answer) => htmlDecode(answer));\n  };\n\n  const shuffleAnswers = (answers) => {\n    const shuffledAnswers = [...answers];\n    return shuffledAnswers.sort((a, b) => 0.5 - Math.random());\n  };\n\n  const appendUUIDToAnswers = (answers) => {\n    return answers.map((el) => (el = { uuid: uuidv4(), answer: el }));\n  };\n\n  if (Object.keys(currentQuestion).length !== 0) {\n    return (\n      <div>\n        <h4>Points: {points}</h4>\n        <Question\n          question={currentQuestion}\n          setLoadQuestion={setLoadQuestion}\n          setQuestion={setCurrentQuestion}\n          points={points}\n          setPoints={setPoints}\n          setShowModal={setShowModal}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <GameButton onClick={() => setLoadQuestion(true)}>\n          Start game\n        </GameButton>\n      </div>\n    );\n  }\n};\n\nexport default Game;\n","import \"./Modal.css\";\nimport GameButton from \"../GameButton/GameButton\";\n\nconst Modal = ({ bodyText, buttonText, onClick }) => {\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-box\">\n        <p>{bodyText}</p>\n        <GameButton onClick={onClick}>{buttonText}</GameButton>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import Header from \"./components/Header/Header.js\";\nimport Game from \"./components/Game/Game.js\";\nimport Modal from \"./components/Modal/Modal.js\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  document.title = \"Quiz | pszocik.github.io\";\n  const [showModal, setShowModal] = useState(false);\n  return (\n    <div className=\"App\">\n      <Header />\n      <Game setShowModal={setShowModal} />\n      {showModal && (\n        <Modal\n          bodyText={\"Wrong answer, you lost!\"}\n          buttonText={\"Continue\"}\n          onClick={() => setShowModal(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}