{"version":3,"sources":["components/Header/Header.js","components/Button/Button.js","components/Question/Question.js","utils/utils.js","components/Game/Game.js","components/Modal/Modal.js","App.js","index.js"],"names":["Header","className","Button","onClick","children","Question","question","setQuestion","setLoadQuestion","points","setPoints","setShowModal","all_answers","map","answer","ev","target","style","backgroundColor","validateAnswer","uuid","htmlDecode","input","DOMParser","parseFromString","documentElement","textContent","Game","useState","loadQuestion","currentQuestion","setCurrentQuestion","useEffect","fetch","then","response","json","questionData","results","functions","argument","reduce","arg","fn","pipe","joinAnswers","cleanAnswers","shuffleAnswers","appendUUIDToAnswers","answers","sort","a","b","Math","random","el","uuidv4","Object","keys","length","Modal","bodyText","buttonText","App","document","title","showModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa49fda4.chunk.js","sourcesContent":["import \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1>Quiz app</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import \"./Button.css\";\n\nconst Button = ({ onClick, children }) => {\n  return (\n    <button className=\"game-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import Button from \"../Button/Button.js\";\nimport \"./Question.css\";\n\nconst Question = ({\n  question,\n  setQuestion,\n  setLoadQuestion,\n  points,\n  setPoints,\n  setShowModal,\n}) => {\n  const validateAnswer = (ev, answer) => {\n    if (answer === question[\"correct_answer\"]) {\n      ev.target.style.backgroundColor = \"green\";\n      setPoints(points + 1);\n      setLoadQuestion(true);\n    } else {\n      setShowModal(true);\n      setPoints(0);\n      setQuestion({});\n    }\n  };\n\n  return (\n    <div className=\"question\">\n      <p>{question.question}</p>\n      {question.all_answers.map((answer) => {\n        return (\n          <Button\n            onClick={(ev) => validateAnswer(ev, answer.answer)}\n            key={answer.uuid}\n          >\n            {answer.answer}\n          </Button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Question;\n","const htmlDecode = (input) => {\n  const doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n};\n\nconst pipe =\n  (...functions) =>\n  (argument) =>\n    functions.reduce((arg, fn) => fn(arg), argument);\n\nexport { htmlDecode, pipe };\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Question from \"../Question/Question.js\";\nimport Button from \"../Button/Button.js\";\nimport { htmlDecode, pipe } from \"../../utils/utils.js\";\n\nconst Game = ({ setShowModal }) => {\n  const [loadQuestion, setLoadQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [points, setPoints] = useState(0);\n\n  useEffect(() => {\n    if (loadQuestion === true) {\n      const url = \"https://opentdb.com/api.php?amount=1\";\n      fetch(url)\n        .then((response) => response.json())\n        .then((json) => {\n          const questionData = json.results[0];\n          questionData.question = htmlDecode(questionData.question);\n          questionData.all_answers = pipe(\n            joinAnswers,\n            cleanAnswers,\n            shuffleAnswers,\n            appendUUIDToAnswers\n          )(questionData);\n\n          setCurrentQuestion(questionData);\n        });\n      setLoadQuestion(false);\n    }\n  }, [loadQuestion]);\n\n  const joinAnswers = (questionData) => [\n    ...questionData[\"incorrect_answers\"],\n    questionData[\"correct_answer\"],\n  ];\n\n  const cleanAnswers = (answers) => {\n    return answers.map((answer) => htmlDecode(answer));\n  };\n\n  const shuffleAnswers = (answers) => {\n    const shuffledAnswers = [...answers];\n    return shuffledAnswers.sort((a, b) => 0.5 - Math.random());\n  };\n\n  const appendUUIDToAnswers = (answers) => {\n    return answers.map((el) => (el = { uuid: uuidv4(), answer: el }));\n  };\n\n  if (Object.keys(currentQuestion).length !== 0) {\n    return (\n      <div>\n        <h4>Points: {points}</h4>\n        <Question\n          question={currentQuestion}\n          setLoadQuestion={setLoadQuestion}\n          setQuestion={setCurrentQuestion}\n          points={points}\n          setPoints={setPoints}\n          setShowModal={setShowModal}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Button onClick={() => setLoadQuestion(true)}>Start game</Button>\n      </div>\n    );\n  }\n};\n\nexport default Game;\n","import \"./Modal.css\";\nimport Button from \"../Button/Button\";\n\nconst Modal = ({ bodyText, buttonText, onClick }) => {\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-box\">\n        <p>{bodyText}</p>\n        <Button onClick={onClick}>{buttonText}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import Header from \"./components/Header/Header.js\";\nimport Game from \"./components/Game/Game.js\";\nimport Modal from \"./components/Modal/Modal.js\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  document.title = \"Quiz | pszocik.github.io\";\n  const [showModal, setShowModal] = useState(false);\n  return (\n    <div className=\"App\">\n      <Header />\n      <Game setShowModal={setShowModal} />\n      {showModal && (\n        <Modal\n          bodyText={\"Wrong answer, you lost!\"}\n          buttonText={\"Continue\"}\n          onClick={() => setShowModal(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}