{"version":3,"sources":["components/Header/Header.js","components/Button/Button.js","components/Question/Question.js","utils/utils.js","components/Game/GameUtils.js","components/Game/Game.js","components/Backdrop/Backdrop.js","components/FramerModal/Modal.js","App.js","index.js"],"names":["Header","className","Button","onClick","children","Question","question","handleGoodAnswer","handleBadAnswer","all_answers","map","answer","ev","validateAnswer","uuid","uuidv4","htmlDecode","input","DOMParser","parseFromString","documentElement","textContent","joinAnswers","questionData","cleanAnswers","answers","shuffleAnswers","sort","Math","random","appendUUIDToAnswers","el","Game","handleWinModalShow","handleLoseModalShow","useState","loadQuestions","setLoadQuestions","questions","setQuestions","points","setPoints","handleSetPoints","value","handleSetQuestions","data","handleLoadQuestion","useEffect","fetch","then","response","json","results","forEach","correct_answer","functions","argument","reduce","arg","fn","pipe","length","updatedQuestions","pop","Backdrop","motion","div","initial","opacity","animate","exit","dropIn","hidden","y","visible","transition","duration","type","damping","stiffness","Modal","handleClose","text","e","stopPropagation","variants","App","document","title","showLoseModal","setShowLoseModal","showWinModal","setShowWinModal","AnimatePresence","exitBeforeEnter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2fb3ddb.chunk.js","sourcesContent":["import \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1>Quiz app</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import \"./Button.css\";\n\nconst Button = ({ onClick, children }) => {\n  return (\n    <button className=\"game-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import Button from \"../Button/Button.js\";\nimport \"./Question.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Question = ({ question, handleGoodAnswer, handleBadAnswer }) => {\n  const validateAnswer = (ev, answer) => {\n    if (answer === question[\"correct_answer\"]) {\n      handleGoodAnswer(ev);\n    } else {\n      handleBadAnswer();\n    }\n  };\n\n  return (\n    <div key={uuidv4()} className=\"question slide-in-left\">\n      <p>{question.question}</p>\n      {question.all_answers.map((answer) => {\n        return (\n          <Button\n            onClick={(ev) => validateAnswer(ev, answer.answer)}\n            key={answer.uuid}\n          >\n            {answer.answer}\n          </Button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Question;\n","const htmlDecode = (input) => {\n  const doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n};\n\nconst pipe =\n  (...functions) =>\n  (argument) =>\n    functions.reduce((arg, fn) => fn(arg), argument);\n\nexport { htmlDecode, pipe };\n","import { htmlDecode } from \"../../utils/utils\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst joinAnswers = (questionData) => [\n  ...questionData[\"incorrect_answers\"],\n  questionData[\"correct_answer\"],\n];\n\nconst cleanAnswers = (answers) => answers.map((answer) => htmlDecode(answer));\n\nconst shuffleAnswers = (answers) =>\n  // bad example of random sorting but it's enough for this app\n  [...answers].sort(() => 0.5 - Math.random());\n\nconst appendUUIDToAnswers = (answers) =>\n  answers.map((el) => ({ uuid: uuidv4(), answer: el }));\n\nexport { joinAnswers, cleanAnswers, shuffleAnswers, appendUUIDToAnswers };\n","import { useState, useEffect } from \"react\";\nimport Question from \"../Question/Question.js\";\nimport Button from \"../Button/Button.js\";\nimport { htmlDecode, pipe } from \"../../utils/utils.js\";\nimport {\n  joinAnswers,\n  cleanAnswers,\n  shuffleAnswers,\n  appendUUIDToAnswers,\n} from \"./GameUtils.js\";\nimport \"./Game.css\";\n\nconst Game = ({ handleWinModalShow, handleLoseModalShow }) => {\n  const [loadQuestions, setLoadQuestions] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [points, setPoints] = useState(0);\n\n  const handleSetPoints = (value) => setPoints(value);\n  const handleSetQuestions = (data) => setQuestions(data);\n  const handleLoadQuestion = (value) => {\n    switch (value) {\n      case true:\n        setLoadQuestions(true);\n        break;\n      case false:\n        setLoadQuestions(false);\n        break;\n      default:\n        setLoadQuestions(false);\n    }\n  };\n\n  useEffect(() => {\n    if (loadQuestions === true) {\n      fetch(\"https://opentdb.com/api.php?amount=10\")\n        .then((response) => response.json())\n        .then((json) => {\n          const questionData = json.results;\n          questionData.forEach((question) => {\n            question.question = htmlDecode(question.question);\n            question.correct_answer = htmlDecode(question.correct_answer);\n            question.all_answers = pipe(\n              joinAnswers,\n              cleanAnswers,\n              shuffleAnswers,\n              appendUUIDToAnswers\n            )(question);\n          });\n          handleSetQuestions(questionData);\n          handleLoadQuestion(false);\n        });\n    }\n  }, [loadQuestions]);\n\n  useEffect(() => {\n    if (points === 10) {\n      handleSetPoints(0);\n      handleWinModalShow();\n    }\n  }, [points, handleWinModalShow]);\n\n  const handleGoodAnswer = (ev) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions.pop();\n    handleSetQuestions(updatedQuestions);\n    handleSetPoints(points + 1);\n  };\n\n  const handleBadAnswer = () => {\n    handleLoseModalShow();\n    handleSetPoints(0);\n    handleSetQuestions([]);\n    handleLoadQuestion(false);\n  };\n\n  return (\n    <div>\n      {questions.length ? (\n        <div>\n          <h4 className=\"game-points\">Points: {points}</h4>\n          <Question\n            key={questions.data}\n            question={questions[questions.length - 1]}\n            handleGoodAnswer={handleGoodAnswer}\n            handleBadAnswer={handleBadAnswer}\n          />\n        </div>\n      ) : (\n        <Button onClick={() => handleLoadQuestion(true)}>Start game</Button>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n","import { motion } from \"framer-motion\";\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = ({ children, onClick }) => {\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={onClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default Backdrop;\r\n","import { motion } from \"framer-motion\";\nimport Backdrop from \"../Backdrop/Backdrop.js\";\nimport Button from \"../Button/Button.js\";\nimport \"./Modal.css\";\n\nconst dropIn = {\n  hidden: { y: \"-100vh\", opacity: 0 },\n  visible: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      duration: 0.5,\n      type: \"string\",\n      damping: 25,\n      stiffness: 500,\n    },\n  },\n  exit: { y: \"100vh\", opacity: 0 },\n};\n\nconst Modal = ({ handleClose, text }) => {\n  return (\n    <Backdrop onClick={handleClose}>\n      <motion.div\n        onClick={(e) => e.stopPropagation()}\n        className=\"modal orange-gradient\"\n        variants={dropIn}\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"exit\"\n      >\n        <p>{text}</p>\n        <Button onClick={handleClose}>Close</Button>\n      </motion.div>\n    </Backdrop>\n  );\n};\n\nexport default Modal;\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header.js\";\nimport Game from \"./components/Game/Game.js\";\nimport Modal from \"./components/FramerModal/Modal.js\";\nimport { AnimatePresence } from \"framer-motion\";\n\nconst App = () => {\n  document.title = \"Quiz | pszocik.github.io\";\n  const [showLoseModal, setShowLoseModal] = useState(false);\n  const [showWinModal, setShowWinModal] = useState(false);\n\n  const handleWinModalClose = () => setShowWinModal(false);\n  const handleLoseModalClose = () => setShowLoseModal(false);\n  const handleWinModalShow = () => setShowWinModal(true);\n  const handleLoseModalShow = () => setShowLoseModal(true);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Game\n        handleWinModalShow={handleWinModalShow}\n        handleLoseModalShow={handleLoseModalShow}\n      />\n      <AnimatePresence initial={false} exitBeforeEnter={true}>\n        {showLoseModal && (\n          <Modal handleClose={handleLoseModalClose} text={\"You lost!\"} />\n        )}\n        {showWinModal && (\n          <Modal\n            handleClose={handleWinModalClose}\n            text={\"Congratulations! You won!\"}\n          />\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}