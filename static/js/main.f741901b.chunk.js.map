{"version":3,"sources":["components/Header/Header.js","components/Button/Button.js","components/Question/Question.js","utils/utils.js","components/Game/GameUtils.js","components/Game/Game.js","components/Modal/Modal.js","components/Modal/LoseModal.js","components/Modal/WinModal.js","App.js","index.js"],"names":["Header","className","Button","onClick","children","Question","question","handleGoodAnswer","handleBadAnswer","console","log","all_answers","map","answer","ev","validateAnswer","uuid","uuidv4","htmlDecode","input","DOMParser","parseFromString","documentElement","textContent","pipe","functions","argument","reduce","arg","fn","joinAnswers","questionData","cleanAnswers","answers","shuffleAnswers","sort","Math","random","appendUUIDToAnswers","el","Game","setShowLoseModal","setShowWinModal","useState","loadQuestion","setLoadQuestion","questions","setQuestions","points","setPoints","useEffect","fetch","then","response","json","results","correct_answer","length","pop","data","Modal","bodyText","buttonText","LoseModal","WinModal","App","document","title","showLoseModal","showWinModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f741901b.chunk.js","sourcesContent":["import \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1>Quiz app</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import \"./Button.css\";\n\nconst Button = ({ onClick, children }) => {\n  return (\n    <button className=\"game-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import Button from \"../Button/Button.js\";\nimport \"./Question.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Question = ({ question, handleGoodAnswer, handleBadAnswer }) => {\n  console.log(question[\"correct_answer\"]);\n  const validateAnswer = (ev, answer) => {\n    if (answer === question[\"correct_answer\"]) {\n      handleGoodAnswer(ev);\n    } else {\n      handleBadAnswer();\n    }\n  };\n\n  return (\n    <div key={uuidv4()} className=\"question slide-in-left\">\n      <p>{question.question}</p>\n      {question.all_answers.map((answer) => {\n        return (\n          <Button\n            onClick={(ev) => validateAnswer(ev, answer.answer)}\n            key={answer.uuid}\n          >\n            {answer.answer}\n          </Button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Question;\n","const htmlDecode = (input) => {\n  const doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n};\n\nconst pipe =\n  (...functions) =>\n  (argument) =>\n    functions.reduce((arg, fn) => fn(arg), argument);\n\nexport { htmlDecode, pipe };\n","import { htmlDecode } from \"../../utils/utils\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst joinAnswers = (questionData) => [\n  ...questionData[\"incorrect_answers\"],\n  questionData[\"correct_answer\"],\n];\n\nconst cleanAnswers = (answers) => {\n  return answers.map((answer) => htmlDecode(answer));\n};\n\nconst shuffleAnswers = (answers) => {\n  const shuffledAnswers = [...answers];\n  // bad example of random sorting but it's enough for this app\n  return shuffledAnswers.sort(() => 0.5 - Math.random());\n};\n\nconst appendUUIDToAnswers = (answers) => {\n  return answers.map((el) => ({ uuid: uuidv4(), answer: el }));\n};\n\nexport { joinAnswers, cleanAnswers, shuffleAnswers, appendUUIDToAnswers };\n","import { useState, useEffect } from \"react\";\nimport Question from \"../Question/Question.js\";\nimport Button from \"../Button/Button.js\";\nimport { htmlDecode, pipe } from \"../../utils/utils.js\";\nimport {\n  joinAnswers,\n  cleanAnswers,\n  shuffleAnswers,\n  appendUUIDToAnswers,\n} from \"./GameUtils.js\";\nimport \"./Game.css\";\n\nconst Game = ({ setShowLoseModal, setShowWinModal }) => {\n  const [loadQuestion, setLoadQuestion] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [points, setPoints] = useState(0);\n\n  useEffect(() => {\n    if (loadQuestion === true) {\n      fetch(\"https://opentdb.com/api.php?amount=10\")\n        .then((response) => response.json())\n        .then((json) => {\n          const questionData = json.results;\n          for (const question of questionData) {\n            question.question = htmlDecode(question.question);\n            question.correct_answer = htmlDecode(question.correct_answer);\n            question.all_answers = pipe(\n              joinAnswers,\n              cleanAnswers,\n              shuffleAnswers,\n              appendUUIDToAnswers\n            )(question);\n          }\n          setQuestions(questionData);\n          setLoadQuestion(false);\n        });\n    }\n  }, [loadQuestion]);\n\n  useEffect(() => {\n    if (points === 10) {\n      setPoints(0);\n      setShowWinModal(true);\n    }\n  }, [points, setShowWinModal]);\n\n  const handleGoodAnswer = (ev) => {\n    questions.pop();\n    setPoints(points + 1);\n  };\n\n  const handleBadAnswer = () => {\n    setShowLoseModal(true);\n    setPoints(0);\n    setQuestions([]);\n    setLoadQuestion(false);\n  };\n\n  return (\n    <div>\n      {questions.length ? (\n        <div>\n          <h4 className=\"game-points\">Points: {points}</h4>\n          <Question\n            key={questions.data}\n            question={questions[questions.length - 1]}\n            handleGoodAnswer={handleGoodAnswer}\n            handleBadAnswer={handleBadAnswer}\n          />\n        </div>\n      ) : (\n        <Button onClick={() => setLoadQuestion(true)}>Start game</Button>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n","import \"./Modal.css\";\nimport Button from \"../Button/Button\";\n\nconst Modal = ({ bodyText, buttonText, onClick }) => {\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-box\">\n        <p>{bodyText}</p>\n        <Button onClick={onClick}>{buttonText}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import Modal from \"./Modal.js\";\n\nconst LoseModal = ({ onClick }) => {\n  return (\n    <Modal\n      bodyText={\"Wrong answer, you lost!\"}\n      buttonText={\"Continue\"}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default LoseModal;\n","import Modal from \"./Modal.js\";\n\nconst WinModal = ({ onClick }) => {\n  return (\n    <Modal\n      bodyText={\"Congratulations! You won!\"}\n      buttonText={\"Continue\"}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default WinModal;\n","import Header from \"./components/Header/Header.js\";\nimport Game from \"./components/Game/Game.js\";\nimport LoseModal from \"./components/Modal/LoseModal.js\";\nimport WinModal from \"./components/Modal/WinModal.js\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  document.title = \"Quiz | pszocik.github.io\";\n  const [showLoseModal, setShowLoseModal] = useState(false);\n  const [showWinModal, setShowWinModal] = useState(false);\n  return (\n    <div className=\"App\">\n      <Header />\n      <Game\n        setShowLoseModal={setShowLoseModal}\n        setShowWinModal={setShowWinModal}\n      />\n      {showLoseModal && <LoseModal onClick={() => setShowLoseModal(false)} />}\n      {showWinModal && <WinModal onClick={() => setShowWinModal(false)} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}